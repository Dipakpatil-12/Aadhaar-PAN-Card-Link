package Advance_Java;

/*
*Annotations in Java
-Annotations provides metadata to class/methods. metadata means info about the method or class
-Annotations start with '@'.
-Annotations are helpful for detecting errors. Example : @override annotations will make sure that there are no typos while overriding a method.
*Important Annotations In Java :
@Override:
-This annotation makes sure that the subclass method is successfully overriding the parent class method.
-While overriding a class, there is a chance of typing errors or spelling mistakes. In such cases, the method will not get overridden and you will get an error.
-Override exception helps us to encounter such situations by extracting a warning from the compiler.
@Deprecated :
-This annotation is used to mark a deprecated method.
-If developer uses the deprecated method then the compiler generated a warning.
-There high chance of removal of deprecated methods in future versions therefore it is better to not use them
* @SupressWarnings :
-This annotation helps us to supress some warnings that are being generated by compiler.
* @FunctionInterface :
-An interface which contains only one abstract method is known as functional interface.
-@FunctionInterface annotation helps us to make sure that a functional interface is not having more than one abstract method.

 */

@FunctionalInterface
interface myFunctionalInteface{
    void thisMethod();
//    void thisMethod2();
}
class Phone{
    public void showTime(){
        System.out.println("Time is 8 am");
    }
    public void on(){
        System.out.println("Turning on Phone...");
    }
}


class NewPhone extends Phone{
    @Override
    public void showTime(){
        System.out.println("Time is 8PM");
    }
    @Deprecated
    public int sum(int a, int b){
        return a+b;
    }
}

public class CWH_108_Java_Annotations {
    @SuppressWarnings("deprecation")
    public static void main(String[] args) {
            NewPhone phone = new NewPhone();
            phone.showTime();
            phone.sum(5, 6);
    }
}
